import asyncio
from datetime import datetime

from pytz import timezone

from PyroUbot import bot, ubot
from PyroUbot.config import LOGS_MAKER_UBOT
from PyroUbot.core.database import (get_expired_date, rem_expired_date,
                                    remove_ubot, rm_all)


def expired_msg_bot(X, time, clock):
    msg_expired = f"<b>‚ùè ·¥ò·¥á·¥ç ô·¥á Ä…™·¥õ·¥Ä ú·¥ú·¥Ä…¥\n ‚îú ·¥Ä·¥ã·¥ú…¥ <a href=tg://user?id={X.me.id}>{X.me.first_name} {X.me.last_name or ''}</a>\n ‚ï∞ …™·¥Ö <code>{X.me.id}</code>\n\n‚ñ∫ ·¥ç·¥Äs·¥Ä ·¥Ä·¥ã·¥õ…™Íú∞ ·¥ús·¥á Ä ô·¥è·¥õ ·¥õ·¥á ü·¥Ä ú  ú·¥Ä ô…™s ·¥õ·¥á Ä…™·¥ç·¥Ä·¥ã·¥Äs…™ ú s·¥ú·¥Ö·¥Ä ú ·¥ç·¥á·¥ç·¥Ä·¥ã·¥Ä…™ ·¥ús·¥á Ä ô·¥è·¥õ @{bot.me.username} ·¥ä·¥Ä…¥…¢·¥Ä…¥  ü·¥ú·¥ò·¥Ä ·¥è Ä·¥Ö·¥á Ä  ü·¥Ä…¢…™  è·¥Ä</b>"
    msg_date = (
        f"<b>üóìÔ∏è ·¥õ·¥Ä…¥…¢…¢·¥Ä ü:</b> <code>{time}</code>\n<b>üïï ·¥ä·¥Ä·¥ç:</b> <code>{clock}</code>"
    )
    return [msg_expired, msg_date]


async def expired_userbot():
    while True:
        now = datetime.now(timezone("Asia/Jakarta"))
        time = now.strftime("%d-%m-%Y")
        clock = now.strftime("%H:%M:%S")
        for X in ubot._ubot:
            try:
                exp = (await get_expired_date(X.me.id)).strftime("%d-%m-%Y")
                if time == exp:
                    await X.log_out()
                    ubot._ubot.remove(X)
                    await rm_all(X.me.id)
                    X._get_my_id.remove(X.me.id)
                    await remove_ubot(X.me.id)
                    await rem_expired_date(X.me.id)
                    await bot.send_message(
                        LOGS_MAKER_UBOT, expired_msg_bot(X, time, clock)[0]
                    )
            except:
                pass
        await asyncio.sleep(3600)
